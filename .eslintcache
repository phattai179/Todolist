[{"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\index.js":"1","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\App.js":"2","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\reportWebVitals.js":"3","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\rootReducer.js":"4","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Page\\BaiTapToDoListSaga\\BaiTapToDoListSaga.js":"5","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Page\\BaiTapToDoListReduxThunk\\BaiTapToDoListReduxThunk.js":"6","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\TodolistReducer.js":"7","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Const\\TodolistConst.js":"8","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Action\\TodolistAction.js":"9","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Util\\setting.js":"10","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Saga\\rootSaga.js":"11","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Saga\\TodolistSaga.js":"12","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Services\\TodolistService.js":"13","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Components\\GlobalSetting\\LoadingComponent.js":"14","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\LoadingReducer.js":"15","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Const\\LoadingCont.js":"16"},{"size":609,"mtime":1609323217336,"results":"17","hashOfConfig":"18"},{"size":751,"mtime":1616597529801,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":783,"mtime":1609396076757,"results":"21","hashOfConfig":"18"},{"size":6310,"mtime":1616598861556,"results":"22","hashOfConfig":"18"},{"size":5696,"mtime":1616598262700,"results":"23","hashOfConfig":"18"},{"size":372,"mtime":1609338656259,"results":"24","hashOfConfig":"18"},{"size":414,"mtime":1609393603724,"results":"25","hashOfConfig":"18"},{"size":2585,"mtime":1616598317716,"results":"26","hashOfConfig":"18"},{"size":264,"mtime":1609393398400,"results":"27","hashOfConfig":"18"},{"size":524,"mtime":1609507475334,"results":"28","hashOfConfig":"18"},{"size":5422,"mtime":1616598453971,"results":"29","hashOfConfig":"18"},{"size":1067,"mtime":1616584044936,"results":"30","hashOfConfig":"18"},{"size":478,"mtime":1609396160095,"results":"31","hashOfConfig":"18"},{"size":487,"mtime":1609396139920,"results":"32","hashOfConfig":"18"},{"size":93,"mtime":1609395174819,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rdyfp2",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\index.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\App.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\reportWebVitals.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\rootReducer.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Page\\BaiTapToDoListSaga\\BaiTapToDoListSaga.js",["71","72"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport style from './Todolist.css'\r\n// import Axios from 'axios'\r\n// import { addTaskListAction, getTaskListAction, deleteTaskAction, checkDoneTaskAction, rejectTaskAction } from '../../Redux/Action/TodolistAction'\r\nimport { ADD_TASK_API_SAGA, CHECK_DONE_TASK_API_SAGA, DELETE_TASK_API_SAGA, GET_TASK_API_SAGA, REJECT_TASK_API_SAGA } from '../../Redux/Const/TodolistConst'\r\n\r\nexport default function BaiTapToDoListReduxThunk(props) {\r\n\r\n    const { taskList } = useSelector(state => state.TodolistReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    // Sử dụng useState để tạo state trên component\r\n    const [state, setState] = useState({\r\n        values: {\r\n            taskName: '',\r\n        },\r\n\r\n        errors: {\r\n            taskName: '',\r\n        }\r\n    })\r\n\r\n\r\n    // Dùng useEffect để chạy 1 lần thì component hiện ra như componentDidMount\r\n    useEffect(() => {\r\n        // getTaskList()\r\n        dispatch({\r\n            type: GET_TASK_API_SAGA,\r\n        })\r\n    }, [])\r\n\r\n    const renderTaskToDo = () => {\r\n        return taskList.filter(task => !task.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button onClick={() => {\r\n                        deleteTask(item.taskName)\r\n                    }} type=\"button\" className=\"remove\">\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button onClick={() => {\r\n                        checkDoneTask(item.taskName)\r\n                    }} type=\"button\" className=\"complete\">\r\n                        <i className=\"far fa-check-circle\" />\r\n                        <i className=\"fas fa-check-circle\" />\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    const renderTaskToDone = () => {\r\n        return taskList.filter(task => task.status).map((item, index) => {\r\n            return <li key={index}>\r\n                <span>{item.taskName}</span>\r\n                <div className=\"buttons\">\r\n                    <button onClick={() => {\r\n                        deleteTask(item.taskName)\r\n                    }} type=\"button\" className=\"remove\">\r\n                        <i className=\"fa fa-trash-alt\" />\r\n                    </button>\r\n                    <button onClick={() => {\r\n                        rejectTask(item.taskName)\r\n                    }} type=\"button\" className=\"complete\">\r\n                        <i class=\"far fa-undo-alt\"></i>\r\n                        <i class=\"fas fa-undo-alt\"></i>\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    // Get taskList\r\n    const getTaskList = () => {\r\n        // Dispatch action saga\r\n\r\n        dispatch({\r\n            type: GET_TASK_API_SAGA,\r\n        })\r\n    }\r\n\r\n    // Xóa Task\r\n    const deleteTask = (taskName) => {\r\n        // Dispatch action saga\r\n\r\n        dispatch({\r\n            type: DELETE_TASK_API_SAGA,\r\n            taskName: taskName\r\n        })\r\n    }\r\n\r\n    // checkDoneTask \r\n    const checkDoneTask = (taskName) => {\r\n        // Dispatch action saga\r\n\r\n        dispatch({\r\n            type: CHECK_DONE_TASK_API_SAGA,\r\n            taskName\r\n        })\r\n    }\r\n\r\n    // RejectTask\r\n    const rejectTask = (taskName) => {\r\n        dispatch({\r\n            type: REJECT_TASK_API_SAGA,\r\n            taskName\r\n        })\r\n    }\r\n\r\n\r\n    // ChangeInput\r\n    const handleChangeInput = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        // Cập nhật giá trị mới\r\n        let newValue = { ...state.values }\r\n        newValue[name] = value\r\n\r\n        // Cập nhật lỗi\r\n        let newError = { ...state.errors }\r\n        if (value.trim() === \"\") {\r\n            newError[name] = name + \" không được bỏ trống\"\r\n        } else {\r\n            newError[name] = \"\"\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValue,\r\n            errors: newError\r\n        })\r\n\r\n    }\r\n\r\n    // ChangeSubmit (AddTask)\r\n    const handleChangeSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let { values, errors } = state\r\n        let valid = true;\r\n\r\n        if (values.taskName.trim() === \"\" || errors.taskName !== \"\") {\r\n            valid = false;\r\n        }\r\n\r\n        if (!valid) {\r\n            alert(\"Dữ liệu add không hợp lệ\")\r\n            return\r\n        }\r\n\r\n        // Dispatch action saga\r\n        dispatch({\r\n            type: ADD_TASK_API_SAGA,\r\n            taskName: values.taskName\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <button className=\"btn btn-primary\" onClick={getTaskList} >Get Todolist ReduxThunk</button>\r\n\r\n            <div className=\"card__header\">\r\n                <img src=\"./img/X2oObC4.png\" alt=\"123\" />\r\n            </div>\r\n            {/* CardBody */}\r\n            <form onSubmit={handleChangeSubmit} className=\"card__body\">\r\n                <div className=\"card__content\">\r\n                    <div className=\"card__title\">\r\n                        <h2>My Tasks</h2>\r\n                        <p>September 9,2020</p>\r\n                    </div>\r\n\r\n                    <div className=\"card__add\">\r\n                        <input onChange={handleChangeInput} name=\"taskName\" id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\r\n                        <button type=\"submit\" id=\"addItem\">\r\n                            <i className=\"fa fa-plus\" />\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text text-danger\" >{state.errors.taskName}</p>\r\n                    <div className=\"card__todo\">\r\n                        {/* Uncompleted tasks */}\r\n                        <ul className=\"todo\" id=\"todo\">\r\n                            {renderTaskToDo()}\r\n                        </ul>\r\n\r\n                        {/* Completed tasks */}\r\n                        <ul className=\"todo\" id=\"completed\">\r\n                            {renderTaskToDone()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Page\\BaiTapToDoListReduxThunk\\BaiTapToDoListReduxThunk.js",["73"],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\TodolistReducer.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Const\\TodolistConst.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Action\\TodolistAction.js",["74","75"],"import Axios from 'axios'\r\nimport { DOMAIN, STATUS_CODE } from '../../Util/setting'\r\nimport { GET_TASK_LIST } from '../Const/TodolistConst'\r\n\r\nexport const getTaskListAction = () => {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            let { data, status } = await Axios({\r\n                url: `${DOMAIN}/api/ToDoList/GetAllTask`,\r\n                method: 'GET'\r\n            })\r\n\r\n            if (status === STATUS_CODE.SUCCESS) {\r\n                dispatch({\r\n                    type: GET_TASK_LIST,\r\n                    taskList: data\r\n                })\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err.response.data)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addTaskListAction = (taskName) => {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            let {status } = await Axios({\r\n                url: `${DOMAIN}/api/ToDoList/AddTask\r\n                `,\r\n                method: 'POST',\r\n                data: { taskName: taskName }\r\n            })\r\n\r\n            if(status === STATUS_CODE.SUCCESS){\r\n                dispatch(getTaskListAction())\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err.response.data)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteTaskAction = (taskName) => {\r\n    return async dispatch => {\r\n        try{\r\n            let {status} = await Axios({\r\n                url: `${DOMAIN}/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n                method: 'DELETE'\r\n            })\r\n\r\n            if(status === STATUS_CODE.SUCCESS){\r\n                dispatch(getTaskListAction())\r\n            }\r\n\r\n        }catch(err){\r\n            console.log(err.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkDoneTaskAction = (taskName) => {\r\n    try{\r\n        return async dispatch => {\r\n            let {status} = await Axios({\r\n                url: `${DOMAIN}/api/ToDoList/doneTask?taskName=${taskName}`,\r\n                method: 'PUT'\r\n            })\r\n\r\n            if(status === STATUS_CODE.SUCCESS){\r\n                dispatch(getTaskListAction())\r\n            }\r\n        }\r\n    }catch(err){\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\nexport const rejectTaskAction = (taskName) => {\r\n    try{\r\n        return async dispatch => {\r\n            let {status} = await Axios({\r\n                url: `${DOMAIN}/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n                method: 'PUT'\r\n            })\r\n            if(status === STATUS_CODE.SUCCESS){\r\n                dispatch(getTaskListAction())\r\n            }\r\n        }\r\n    }catch(err) {\r\n        console.log(err.response?.data)\r\n    }\r\n}",["76","77"],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Util\\setting.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Saga\\rootSaga.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Saga\\TodolistSaga.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Services\\TodolistService.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Components\\GlobalSetting\\LoadingComponent.js",["78"],"import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport styleLoading from './LoadingComponent.module.css'\r\n\r\nexport default function LoadingComponent() {\r\n\r\n    let {isLoading} = useSelector(state => state.LoadingReducer)\r\n\r\n    if(isLoading){\r\n        return (\r\n            <div className = {styleLoading.bgLoading} >\r\n                <img src = \"./img/CurveLoading.gif\" ></img>\r\n            </div>\r\n        )\r\n    }else{\r\n        return ''\r\n    }\r\n    \r\n}\r\n",["79","80"],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Reducer\\LoadingReducer.js",[],"D:\\Nhap_HTML\\Nhap_ToDoList_Saga_Hook\\todolist_sage_hook\\src\\Redux\\Const\\LoadingCont.js",[],{"ruleId":"81","severity":1,"message":"82","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":31,"column":8,"nodeType":"87","endLine":31,"endColumn":10,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":27,"column":8,"nodeType":"87","endLine":27,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":80,"column":16,"nodeType":"93","messageId":"94","endLine":82,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":96,"column":17,"nodeType":"93","messageId":"94","endLine":98,"endColumn":6},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":12,"column":17,"nodeType":"101","endLine":12,"endColumn":54},{"ruleId":"95","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'getTaskList'. Either include it or remove the dependency array.",["105"],"no-unreachable","Unreachable code.","BlockStatement","unreachableCode","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["106"],["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},"Update the dependencies array to be: [getTaskList]",{"range":"114","text":"115"},[1084,1086],"[dispatch]",[853,855],"[getTaskList]"]